diff -up kdelibs-4.14.17/solid/solid/backends/shared/cpufeatures.cpp.gcc6 kdelibs-4.14.17/solid/solid/backends/shared/cpufeatures.cpp
--- kdelibs-4.14.17/khtml/dom/dom2_traversal.h.gcc6	2016-02-12 19:27:45.874888043 -0600
+++ kdelibs-4.14.17/khtml/dom/dom2_traversal.h	2016-02-12 19:26:11.777418711 -0600
@@ -214,7 +214,7 @@ public:
      *
      */
     enum ShowCode {
-        SHOW_ALL                       = 0xFFFFFFFF,
+        SHOW_ALL                       = (int)0xFFFFFFFF,
         SHOW_ELEMENT                   = 0x00000001,
         SHOW_ATTRIBUTE                 = 0x00000002,
         SHOW_TEXT                      = 0x00000004,
--- kdelibs-4.14.17/solid/solid/backends/shared/cpufeatures.cpp.gcc6	2016-02-11 23:06:08.000000000 -0600
+++ kdelibs-4.14.17/solid/solid/backends/shared/cpufeatures.cpp	2016-02-12 19:14:07.708788182 -0600
@@ -51,23 +51,23 @@ static void sighandler( int )
 #endif
 
 #ifdef __i386__
-  #define ASM_REG(reg)              "%e"reg
-  #define ASM_POP(reg)              "popl   %%e"reg"             \n\t"
-  #define ASM_PUSH(reg)             "pushl  %%e"reg"             \n\t"
-  #define ASM_XOR_REG(reg1, reg2)   "xorl   %%e"reg1", %%e"reg2" \n\t"
-  #define ASM_XOR_VAR(var, reg)     "xorl   "var",     %%e"reg"  \n\t"
-  #define ASM_CMP_REG(reg1, reg2)   "cmpl   %%e"reg1", %%e"reg2" \n\t"
-  #define ASM_MOV_REG(reg1, reg2)   "movl   %%e"reg1", %%e"reg2" \n\t"
-  #define ASM_MOV_VAR(var, reg)     "movl   "var",     %%e"reg"  \n\t"
+  #define ASM_REG(reg)              "%e" reg
+  #define ASM_POP(reg)              "popl   %%e" reg "             \n\t"
+  #define ASM_PUSH(reg)             "pushl  %%e" reg "             \n\t"
+  #define ASM_XOR_REG(reg1, reg2)   "xorl   %%e" reg1 ", %%e" reg2 " \n\t"
+  #define ASM_XOR_VAR(var, reg)     "xorl   " var ",     %%e" reg "  \n\t"
+  #define ASM_CMP_REG(reg1, reg2)   "cmpl   %%e" reg1 ", %%e" reg2 " \n\t"
+  #define ASM_MOV_REG(reg1, reg2)   "movl   %%e" reg1 ", %%e" reg2 " \n\t"
+  #define ASM_MOV_VAR(var, reg)     "movl   " var ",     %%e" reg "  \n\t"
 #elif defined(__x86_64__)
-  #define ASM_REG(reg)              "%r"reg
-  #define ASM_POP(reg)              "popq   %%r"reg"             \n\t"
-  #define ASM_PUSH(reg)             "pushq  %%r"reg"             \n\t"
-  #define ASM_XOR_REG(reg1, reg2)   "xorq   %%r"reg1", %%r"reg2" \n\t"
-  #define ASM_XOR_VAR(var, reg)     "xorq   "var",     %%r"reg"  \n\t"
-  #define ASM_CMP_REG(reg1, reg2)   "cmpq   %%r"reg1", %%r"reg2" \n\t"
-  #define ASM_MOV_REG(reg1, reg2)   "movq   %%r"reg1", %%r"reg2" \n\t"
-  #define ASM_MOV_VAR(var, reg)     "movq   "var",     %%r"reg"  \n\t"
+  #define ASM_REG(reg)              "%r" reg
+  #define ASM_POP(reg)              "popq   %%r" reg "             \n\t"
+  #define ASM_PUSH(reg)             "pushq  %%r" reg "             \n\t"
+  #define ASM_XOR_REG(reg1, reg2)   "xorq   %%r" reg1 ", %%r" reg2 " \n\t"
+  #define ASM_XOR_VAR(var, reg)     "xorq   " var ",     %%r" reg "  \n\t"
+  #define ASM_CMP_REG(reg1, reg2)   "cmpq   %%r" reg1 ", %%r" reg2 " \n\t"
+  #define ASM_MOV_REG(reg1, reg2)   "movq   %%r" reg1 ", %%r" reg2 " \n\t"
+  #define ASM_MOV_VAR(var, reg)     "movq   " var ",     %%r" reg "  \n\t"
 #endif
 
 #ifdef __PPC__
--- kdelibs-4.14.17/ConfigureChecks.cmake.gcc6	2016-02-11 23:06:08.000000000 -0600
+++ kdelibs-4.14.17/ConfigureChecks.cmake	2016-02-12 19:14:07.707788177 -0600
@@ -244,7 +244,7 @@ check_prototype_exists(unsetenv stdlib.h
 check_prototype_exists(usleep unistd.h              HAVE_USLEEP_PROTO)
 check_prototype_exists(initgroups "unistd.h;sys/types.h;unistd.h;grp.h" HAVE_INITGROUPS_PROTO)
 check_prototype_exists(setreuid unistd.h            HAVE_SETREUID_PROTO)
-check_prototype_exists(trunc math.h                 HAVE_TRUNC)
+check_prototype_exists(truncf math.h                HAVE_TRUNC)
 
 # check for existing datatypes
 
